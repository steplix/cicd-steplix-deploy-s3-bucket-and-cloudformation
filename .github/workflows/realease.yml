name: Deployment to production
run-name: >
  Production deploy ${{ github.event.release.tag_name }}: ${{ github.event.release.name }}
on:
  release:
    types: [published]


jobs:

  ## DEPLOY

  download_unzip_deploy:
    runs-on: ubuntu-latest
    steps:
      #DOWNLOAD
      - uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PROD_AWS_REGION }}

      - name: download zip from S3
        run: |
          aws s3 cp s3://${{ vars.PROD_AWS_BUCKET_ARTIFACT }}/${{ github.event.release.tag_name }}.tar.gz .
      #UNZIP
      - name: mkdir
        run: mkdir output

      - name: un-zip
        id: unzip
        run: tar -xvzf ${{ github.event.release.tag_name }}.tar.gz -C output

      #UPLOAD
      - uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PROD_AWS_REGION }}
      - name: copy files to S3
        run: |
          aws s3 sync output s3://${{ vars.PROD_AWS_BUCKET }}
      - name: Cloudfront invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ vars.PROD_AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
  


  notify:
    if: ${{ always() }}
    needs: [ download_unzip_deploy ]
    uses: ./.github/workflows/notify.yml
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-title: "DEPLOY to prod version: ${{ github.event.release.tag_name }}"
      slack-message: ${{ github.repository.url }}
      job-status: ${{ needs.download_unzip_deploy.result}}
    secrets:
      slack-webhook: ${{ secrets.SLACK_WEBHOOK }}