name: Create initial S3 bucket
run-name: S3 bucket creation

on:
    push:
        branches:
            - testing
            - staging
            - master

jobs:

    create_bucket:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v2
              with:
                  node-version: ${{ vars.NODE_VERSION }}

            - uses: aws-actions/configure-aws-credentials@v4.0.2
              with:
                  aws-access-key-id: ${{ secrets.TEST_AWS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.TEST_AWS_REGION }}

            - name: Capitalize environment
              id: CAPITALIZED_ENV
              uses: ASzc/change-string-case-action@v5
              with:
                  string: ${{ vars.ENVIRONMENT }}

            - name: Build cloudformation stack name
              shell: bash
              env:
                  ENVIRONMENT: ${{ vars.ENVIRONMENT }}
                  STACK_NAME: ${{ vars.AWS_CF_STACK_NAME }}
                  CONCAT_ENV: ${{ vars.CONCAT_ENV_CF_STACK_NAME }}
              run: >-
                  echo "CF_STACK_NAME=$(if [ $CONCAT_ENV == true ]; then echo ${STACK_NAME}-${ENVIRONMENT}; else echo ${STACK_NAME}; fi)" >> $GITHUB_ENV

            - name: Deploy to AWS CloudFormation
              uses: aws-actions/aws-cloudformation-github-deploy@v1
              env:
                  ENV_CAPITALIZED: ${{ steps.CAPITALIZED_ENV.outputs.capitalized }}
              with:
                  name: ${{ vars.CF_STACK_NAME }}
                  template: ./cloudformation/cloudformation.yml
                  capabilities: ${{ vars.CAPABILITIES }}
                  parameter-overrides: >-
                      Environment=${{ vars.ENVIRONMENT }}
                      Project=${{ vars.PROJECT }}
                      DomainName=${{ vars.DOMAIN }}
                      SubDomain=${{ vars.SUB_DOMAIN }}
                      AcmCertificateArn=${{ vars.ACM_CERTIFICATE_ARN }}